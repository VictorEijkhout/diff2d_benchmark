template< typename real >
real bordered_array_1d<real>::l2norm() {
  real sum_of_squares{0};
  auto out = this->data();
#   pragma omp parallel for reduction(+:sum_of_squares)
  for ( size_t i=0; i<_m; i++ )
    for ( size_t j=0; j<_n; j++ ) {
      auto v = out[ IINDEX(i,j) ];
      sum_of_squares += v*v;
    }
  log_flops(_m*_n*3); log_bytes( sizeof(real)*_m*_n*1 );
  return std::sqrt(sum_of_squares);
};
